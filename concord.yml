configuration:
  dependencies:
    - mvn://org.python:jython-standalone:2.7.1
    - mvn://org.codehaus.groovy:groovy-all:pom:2.5.2

  arguments:
    entryPoint: deploy
    version: "1.0"
    branch: "develop"
    commitSHA: ""
    kittFiles: [ "test-env-cloud.yml", "release-3040-cloud.yml", "release-8972-cloud.yml" ]
    organization: "Hawkeye"
    kittFilesGraph: [ ["test-env-cloud.yml" ], ["test-env-cloud.yml", "release-3040-cloud.yml"], [ "test-env-cloud.yml", "release-8972-cloud.yml"], [ "test-env-cloud.yml", "release-3040-cloud.yml", "release-8972-cloud.yml"] ]
    kittInfo:
      kittCompletedDeployments: [ ]
    deploymentUsingGraph: false
    usingKittFileSelection: false
    completeIndicator: 0
    repo: "test-pipeline"
    baseProfile: { }
    event: "push"
    channelName: "hawkeye-kitt"

forms:
  deploymentForm:
    - onlySelectedKittFiles: { label: "Kitt Files", type: "string*" }

flows:
  default:
    - log: "Hawkeye-Concord | This is the default flow"

  kitt-deploy:
    - set:
        currentStage: ${stageRefs[0]}
    - expr: ${kittInfo.kittCompletedDeployments.stream().filter(s -> currentStage.equals(s.stage) && item.equals(s.kittFile)).toList().size()}
      out: alreadyCompletedProcess
    - if: ${alreadyCompletedProcess <= 0}
      then:
        - log: "Hawkeye Concord | Reading contents of kitt file ${item}"
        - set:
            deploymentInfo:
              stage: ${stageRefs[0]}
              kittFile: ${item}
        - ${deployments.add(deploymentInfo)}
      else:
        - log: "Hawkeye Concord | Skipping deployment of Stage: ${currentStage} and KittFile: ${item}"

  deploy-stage:
    - log: "Hawkeye-Concord | We got ${stageName}"
    - log: "Hawkeye-Concord | Deploying to ${stageName} with baseProfile=${baseProfile}"
    - checkpoint: "Deploy_${stageName}"
    - set:
        jobIds: [ ]
        deployments: [ ]
    - call: kitt-deploy
      withItems: ${kittFiles}
      in:
        stageRefs: [ "${stageName}" ]
    - ${kittInfo.kittCompletedDeployments.addAll(deployments)}

  deploy-by-ref:
    - log: "Hawkeye Concord | deploy-by-ref ${item}"
    - if: ${branch.matches(item)}
      then:
        - call: deploy-stage
          in:
            stageName: ${stageName}
      else:
        - log: "Hawkeye Concord | Skipping unmatched ref: ${item}"

  deploy-by-stage:
    - log: "Hawkeye Concord | deploy-by-stage ${item.name} - ${item.refs}"
    - set:
        stageName: ${item.name}
    - call: deploy-by-ref
      in:
        stageName: ${stageName}
      withItems: ${item.refs}

  displayDeploy:
    - checkpoint: deploy
    - form: deploymentForm
      values:
        processId: ${txId}
        repo: ${repo}
        branch: ${branch}
        version: ${version}
        kittFilesGraph: ${kittFilesGraph}
        organization: ${organization}
        executedBy: ${currentUser.username}
    - expr: ${deploymentForm.onlySelectedKittFiles.stream().filter(done -> done.contains('Done')).toList().size()}
      out: deploymentDone
    - expr: ${deploymentForm.onlySelectedKittFiles.stream().filter(done -> done.contains('Default')).toList().size()}
      out: useSuppliedKittFiles
    - expr: ${deploymentForm.onlySelectedKittFiles.stream().flatMap(str -> str.split(",").stream()).toList()}
      out: selectedKittFiles

    - if: ${deploymentDone != 0}
      then:
        - if: ${usingSupplyKittFiles != 1}
          then:
            - set:
                kittFiles: ${selectedKittFiles}
      else:
        - set:
            completedDeployment: true
  deploy:
    - log: "Hawkeye Concord | !!! GITHUB EVENT !!! ${event}"
    - checkpoint: "Start"
    - expr: ${kittFilesGraph.size()}
      out: graphSize
    - if: ${graphSize > 0}
      then:
        - set:
            deploymentUsingGraph: true
        - call: displayDeploy
    - if: ${completeIndicator == 0}
      then:
        - log: "Hawkeye Concord | Continuing With Deployment"
    - log: "Hawkeye Concord | Deployment through pipeline finished"

  onFailure:
    - log: "Hawkeye Concord | Pipeline failed to complete"
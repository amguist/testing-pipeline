configuration:
  dependencies:
    - mvn://org.python:jython-standalone:2.7.1
    - mvn://org.codehaus.groovy:groovy-all:pom:2.5.2

  arguments:
    entryPoint: deploy
    version: "1.0"
    branch: "develop"
    commitSHA: ""
    kittFiles: [ "test-env-cloud.yml", "release-3040-cloud.yml", "release-8972-cloud.yml" ]
    organization: "Hawkeye"
    kittFilesGraph: [ ["test-env-cloud.yml" ], ["test-env-cloud.yml", "release-3040-cloud.yml"], [ "test-env-cloud.yml", "release-8972-cloud.yml"], [ "test-env-cloud.yml", "release-3040-cloud.yml", "release-8972-cloud.yml"] ]
    kittInfo:
      kittCompletedDeployments: [ ]
    repo: "test-pipeline"
    baseProfile: { }
    event: "push"
    channelName: "hawkeye-kitt"
    storeName: ""
    storeItemName: "kittCompletedDeployments"
    useFormDeploymentFlow: false

forms:
  deploymentForm:
    - onlySelectedKittFiles: { label: "Kitt Files", type: "string*" }

flows:
  default:
    - log: "Hawkeye-Concord | This is the default flow"

  kitt-deploy:
    - log: "Hawkeye Concord | Reading contents of kitt file ${item}"
    - set:
        deploymentInfo:
          stage: ${stageRefs[0]}
          kittFile: ${item}
    - ${deployments.add(deploymentInfo)}

  deploy-stage:
    - log: "Hawkeye-Concord | We got ${stageName}"
    - log: "Hawkeye-Concord | Deploying to ${stageName} with baseProfile=${baseProfile}"
    - checkpoint: "Deploy_${stageName}"
    - set:
        jobIds: [ ]
        deployments: [ ]
    - call: kitt-deploy
      withItems: ${kittFiles}
      in:
        stageRefs: [ "${stageName}" ]
    - ${kittInfo.kittCompletedDeployments.addAll(deployments)}

  deploy-by-ref:
    - log: "Hawkeye Concord | deploy-by-ref ${item}"
    - if: ${branch.matches(item)}
      then:
        - call: deploy-stage
          in:
            stageName: ${stageName}
      else:
        - log: "Hawkeye Concord | Skipping unmatched ref: ${item}"

  deploy-by-stage:
    - log: "Hawkeye Concord | deploy-by-stage ${item.name} - ${item.refs}"
    - set:
        stageName: ${item.name}
    - call: deploy-by-ref
      in:
        stageName: ${stageName}
      withItems: ${item.refs}

  load-previous-completed-info:
    - log: "Hawkeye Concord | Loading existing data from JSON Store, ${storeName} ..."
    - expr: ${jsonStore.get(storeName,storeItemName)}
      out: storeItem
    - if: ${storeItem == null}
      then:
        - log: "Can not find the item requested in the JSON Store"
      else:
        - log: "${storeItem}"
        - ${kittInfo.kittCompletedDeployments.addAll(storeItem.kittCompletedDeployments)}

  update-json-store:
    - log: "Hawkeye Concord | Updating JSON Store, ${storeName} ..."
    - ${jsonStore.upsert(storeName,storeItemName,kittInfo)}

  deploy:
    - log: "Hawkeye Concord | !!! GITHUB EVENT !!! ${event}"
    - set:
        storeName: "${repo}-${version}"
    - log: "Hawkeye Concord | Store Name: ${storeName}"
    - checkpoint: "Start"
    - if: ${jsonStore.isStoreExists(storeName)}
      then:
        - log: "Hawkeye Concord | JSON Store, ${storeName}, exists ... continuing to load .."
        - call: load-previous-completed-info
      else:
        - log: "Hawkeye Concord | No JSON Store exists for store name, ${storeName}, ..."
    - expr: ${kittFilesGraph.size()}
      out: graphSize
    - if: ${graphSize > 0}
      then:
        - form: deploymentForm
          values:
            processId: ${txId}
            repo: ${repo}
            branch: ${branch}
            version: ${version}
            kittFilesGraph: ${kittFilesGraph}
            organization: ${organization}
        - expr: ${deploymentForm.onlySelectedKittFiles.stream().flatMap(str -> str.split(",").stream()).toList()}
          out: selectedKittFiles
        - set:
            kittFiles: ${selectedKittFiles}
        - log: "Hawkeye Concord | Complete Kitt File Details: ${kittInfo.kittCompletedDeployments}"
    - if: ${ event == "push" }
      then:
        - log: "Hawkeye Concord | Deploying non PR stages"
        - set:
            itemByStage:
              name: "dev"
              refs: [ "develop" ]
            itemsByStage: [ ]
        - ${itemsByStage.add(itemByStage)}
        - call: deploy-by-stage
          withItems: ${itemsByStage}
        - log: "Hawkeye Concord | Final Deployed Details: ${kittInfo.kittCompletedDeployments}"
        - call: update-json-store

  onFailure:
    - log: "Hawkeye Concord | Pipeline failed to complete"